#define _CRT_SECURE_NO_WARNINGS 1
//      a,b区间内有多少个数数位之和为5的倍数
//#include<stdio.h>
//int is_num(int num)
//
//{
//    int sum = 0;
//    while (num)
//    {
//        sum += num % 10;
//        num /= 10;
//    }
//    return sum;
//}
//int main()
//{
//    int a = 0;
//    int b = 0;
//    scanf("%d%d", &a, &b);
//    int count = 0;
//    int i = 0;
//    for (i = a; i <= b; i++)
//    {
//        if (is_num(i) % 5 == 0)
//        {
//            count++;
//        }
//    }
//    printf("%d", count);
//    return 0;
//}
//int main()
//{
//
//}

//          递归实现n的阶乘n<20
//#include<stdio.h>
//long long num(long long x);
//int main()
//{
//    long long i = 0;
//    long long con = 0;
//    scanf("%lld", &i);
//    con = num(i);
//    printf("%lld", con);
//    return 0;
//}
//long long num(long long x)
//{
//    if (x < 2)
//    {
//        return 1;
//    }
//    return (x * num(x - 1));
//}
////判断一个整数n是否是闰年
//#include<stdio.h>
//int main()
//{
//    int i = 0;
//    scanf("%d", &i);
//    if ((i % 4 == 0 && i % 100 != 0) || i % 400 == 0)
//    {
//        printf("yes");
//        return 0;
//    }
//    printf("no");
//    return 0;
//}
              //输出九九乘法表
//#include<stdio.h>
//int main()
//{
//    int i = 9;
//    int y = 0;
//    int j = 0;
//    for (y = 1; y <= i; y++)
//    {
//        for (j = 1; j <= y; j++)
//        {
//            printf("%d*%d=%2d ", j, y, j * y);
//        }
//        printf("\n");
//    }
//    return 0;
//}
//               输入一组数取成绩前五
//#include<stdio.h>
//int main()
//{
//    int n = 0;
//    int i = 0;
//    int j = 0;//循环
//    int high[50] = { 0 };//成绩高的
//    int l = 0;
//    scanf("%d", &n);
//    for (j = 0; j < n; j++)
//    {
//        scanf("%d", high[j]);
//
//    }
//    for (j = 0; j < n - 1; j++)//冒泡j
//    {
//        for (l = 0; l < n - 1 - j; l++)
//        {
//            if (high[l] < high[l + 1])
//            {
//                i = high[l];
//                high[l] = high[l + 1];
//                high[l + 1] = i;
//            }
//        }
//
//    }
//    for (l = 0; l < 5; l++)
//    {
//        printf("%d ", high[l]);
//    }
//    return 0;
//}
//输入两个升序排列的序列，将两个序列合并为一个有序序列并输出。
//#include<stdio.h>
//int main()
//{
//    int n = 0;
//    int m = 0;
//    int pp[10000] = { 0 };
//    int y, j;
//    scanf("%d%d", &n, &m);
//    int i = n + m;
//    for (y = 0; y < i; y++)
//    {
//        scanf("%d", &pp[y]);
//    }
//    n = 0;
//    for (y = 0; y < i - 1; y++)
//    {
//        for (j = 0; j < i - 1 - y; j++)
//        {
//            if (pp[j] > pp[j + 1])
//            {
//                n = pp[j];
//                pp[j] = pp[j + 1];
//                pp[j + 1] = n;
//            }
//        }
//    }
//    for (y = 0; y < i; y++)
//    {
//        printf("%d ", pp[y]);
//    }
//    return 0;
//}

//                    判断两个矩阵是否相等
#include<stdio.h>
int main()
{
    int n = 0;
    int m = 0;
    scanf("%d%d", &n, &m);
    int str1[10][10] = { 0 };
    int str2[10][10] = { 0 };
    int i, y;
    for (i = 0; i < n; i++)
    {
        for (y = 0; y < m; y++)
        {
            scanf("%d", &str1[i][y]);
        }
    }
    for (i = 0; i < n; i++)
    {
        for (y = 0; y < m; y++)
        {
            scanf("%d", &str2[i][y]);
        }
    }
    for (i = 0; i < n; i++)
    {
        for (y = 0; y < m; y++)
        {
            if (str1[i][y] != str2[i][y])
            {
                printf("No");
                return 0;
            }
        }
    }
    printf("Yes");
    return 0;
}
